<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="black">#000000</color>
    <color name="blue_400">#42A5F5</color>
    <color name="blue_500">#2196F3</color>
    <color name="blue_600">#1E88E5</color>
    <color name="blue_700">#1976D2</color>
    <color name="blue_800">#1565C0</color>
    <color name="transparent">#00000000</color>
    <color name="white">#ffffff</color>
    <dimen name="pad_10dp">10dp</dimen>
    <dimen name="pad_160dp">160dp</dimen>
    <dimen name="pad_5dp">5dp</dimen>
    <dimen name="txt_14sp">14sp</dimen>
    <dimen name="txt_15sp">15sp</dimen>
    <dimen name="txt_16sp">16sp</dimen>
    <dimen name="txt_18sp">18sp</dimen>
    <dimen name="txt_20sp">20sp</dimen>
    <string name="app_name">SciApps</string>
    <string name="menu_about">About</string>
    <string name="message">When the app is launched variables and UI components are initialized. The series of reference values stored in directory ‘raw’ are parsed into a graph data structure. The app uses an implicit intent to launch an existing file chooser so the user can select a .csv file from a directory. The .csv file is parsed into an arrayList after which each value from the graph is evaluated against the previously parsed reference values.
	Each wavelength value in the arrayList is compared to each reference wavelength value in the graph and if it’s within + or - .5 then it’s considered a match. When a match is located the corresponding element and all intensity values for that element are returned. Each intensity value is then multiplied by the maximum existing intensity value to determine the percentage value needed for matching. Next the not-normalized intensity value is compared to the previously
        determined percentage and if it’s within + or - .6 it’s considered a match. </string>
    <string name="ok">Ok</string>
    <style name="AppTheme" parent="@android:style/Theme.Holo.Light.DarkActionBar">
        <item name="android:actionBarItemBackground">@color/blue_800</item>
        <item name="android:actionBarStyle">@style/custom_ActionBar</item>
    </style>
    <style name="custom_ActionBar" parent="@android:style/Widget.Holo.Light.ActionBar.Solid.Inverse">
        <item name="android:background">@color/blue_800</item>
        <item name="android:textColor">@color/white</item>
        <item name="android:textSize">16sp</item>
    </style>
</resources>